import React from 'react';

export const Header = () => {
  return (
    <header className="relative w-full">
      {/* Gradient Background */}
      <div className="w-full h-[253px] relative">
        <svg
          width="100%"
          height="253"
          viewBox="0 0 1355 253"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          className="absolute inset-0 w-full h-full"
        >
          <defs>
            <linearGradient
              id="idorBg"
              x1="0%"
              y1="0%"
              x2="100%"
              y2="100%"
            >
              <stop offset="0%" stopColor="hsl(var(--primary))" />
              <stop offset="100%" stopColor="hsl(var(--accent))" />
            </linearGradient>
          </defs>
          <rect width="100%" height="100%" fill="url(#idorBg)" />
        </svg>
        
        {/* Header Content */}
        <div className="absolute inset-0 flex flex-col items-center justify-center text-center px-4">
          <h1 className="absolute left-1/2 top-[45%] -translate-x-1/2 -translate-y-1/2 text-[80px] font-normal text-brand bg-muted px-8 py-2 rounded-md shadow-lg max-md:text-5xl max-sm:text-4xl">
            IDOR
          </h1>
        </div>
        
        {/* Description */}
        <div className="absolute bottom-4 left-4 right-4">
          <p className="text-foreground text-sm leading-relaxed bg-background/90 backdrop-blur-sm p-4 rounded-lg">
            ðŸ§ What is Insecure Direct Object Reference?<br />
            IDOR happens when your application exposes references to internal objects â€” allowing users to access unauthorized data.<br />
            ðŸ‘€ Imagine This:<br />
            You have URLs like /user/profile?id=123, but someone changes it to /user/profile?id=124<br />
            Now, they can access other users' profiles â€” without proper authorization checks.<br />
            ðŸ‘‰ They view private data â€” and your access control is bypassed.
          </p>
        </div>
      </div>
    </header>
  );
};